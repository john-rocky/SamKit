apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    namespace 'com.samkit'
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -frtti -fexceptions"
                arguments "-DANDROID_STL=c++_shared",
                        "-DANDROID_ARM_NEON=ON",
                        "-DANDROID_PLATFORM=android-26"
            }
        }
        
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            externalNativeBuild {
                cmake {
                    cppFlags "-O3 -DNDEBUG -fvisibility=hidden -ffunction-sections -fdata-sections"
                    arguments "-DCMAKE_BUILD_TYPE=Release"
                }
            }
        }
        
        debug {
            debuggable true
            jniDebuggable true
            
            externalNativeBuild {
                cmake {
                    cppFlags "-O0 -g -DDEBUG"
                    arguments "-DCMAKE_BUILD_TYPE=Debug"
                }
            }
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = '11'
    }
    
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version "3.22.1"
        }
    }
    
    buildFeatures {
        buildConfig true
        prefab true
    }
    
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libtensorflowlite_jni.so'
        pickFirst '**/libtensorflowlite_gpu_jni.so'
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // Android
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // TensorFlow Lite
    implementation 'org.tensorflow:tensorflow-lite:2.14.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.14.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.4'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.4.4'
    
    // Image processing
    implementation 'androidx.graphics:graphics-core:1.0.0-alpha04'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
}

// Task to download models
task downloadModels {
    doLast {
        def modelsDir = file("src/main/assets/models")
        modelsDir.mkdirs()
        // Model download logic will be added here
    }
}